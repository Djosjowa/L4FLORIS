%% Calculate DEL values for the inflow profiles generated by "setupInflowFiles.m"
clear; close all; clc;
startTime = tic;
addpath bin

% Setup inflow settings
inflowSetName          = 'C2C_only';
inputData.sourceFolder = ['inflowProfiles\' inflowSetName];

% Specify correct settings and load workspace
WS          = load([inputData.sourceFolder '\workspace.mat']);
T           = WS.inputData.T;  % simulation time in seconds
dt          = WS.inputData.dt; % sampling time in seconds

% Import relevant libraries and files for FAST
load('FAST_module\Controller_parameters');   % Load FAST settings

% Prepare folder for saving single DEL values
WS.DELfoldername = '..\LUT_database\DEL_files';
if exist(WS.DELfoldername) % Delete existing folder
    user_response = input(['Are you sure you want to delete folder ' WS.DELfoldername '? (y/n)  '],'s');
    if lower(user_response(1)) == 'y'
        rmdir(foldername ,'s');
    else
        error('Please rename the old folder or change the destination folder name.');
    end
end
mkdir(WS.DELfoldername); % Create folder

% Evaluate DELs
[matDELs,~] = nested_calculateDELs(WS);
% Setup for evaluating DELs on multiple cores
% longestRange = WS.longestRange;
% newParameters = WS.newParameters;
% newRanges = WS.newRanges;
% parfor i = 1:length(longestRange)
%     [matDELs,~] = nested_calculateDELs(WS , newParameters , [longestRange(i) , newRanges]);
% end

%
disp('Finished calculating DEL table. Saving...');
save(['..\LUT_database\' inflowSetName '.mat'],'matDELs','WS');
toc(startTime);